// Code generated by MockGen. DO NOT EDIT.
// Source: ./I_wallet_repository.go

// Package mock_authusecase is a generated GoMock package.
package mock_authusecase

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/toshi0228/blockchain/src/entity"
)

// MockIWalletRepository is a mock of IWalletRepository interface.
type MockIWalletRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletRepositoryMockRecorder
}

// MockIWalletRepositoryMockRecorder is the mock recorder for MockIWalletRepository.
type MockIWalletRepositoryMockRecorder struct {
	mock *MockIWalletRepository
}

// NewMockIWalletRepository creates a new mock instance.
func NewMockIWalletRepository(ctrl *gomock.Controller) *MockIWalletRepository {
	mock := &MockIWalletRepository{ctrl: ctrl}
	mock.recorder = &MockIWalletRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletRepository) EXPECT() *MockIWalletRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIWalletRepository) Create(userId uint32) (*entity.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", userId)
	ret0, _ := ret[0].(*entity.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIWalletRepositoryMockRecorder) Create(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIWalletRepository)(nil).Create), userId)
}
